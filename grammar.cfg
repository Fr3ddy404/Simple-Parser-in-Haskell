
strAlphaNum --> \e
strAlphaNum --> upperAlphaNum strAlphaNum
strAlphaNum --> lowerAlphaNum strAlphaNum

upperId --> upperAlphaNum strAlphaNum

lowerId --> lowerAlphaNum strAlphaNum

----------
-- data --
----------

S --> data _1 upperId lisLowerId _0 = _0 lisConst

lisLowerId --> \e
lisLowerId --> _1 lowerId lisLowerId

lisConst --> upperId lisLowerId restConst

restConst --> \e
restConst --> _0 | _0 upperId lisLowerId restConst

_1 --> space
_1 --> space _0

_0 --> \e
_0 --> space _0


---------------
-- Functions --
---------------

--------------------
-- Func Signature --
--------------------

S --> lowerId _0 :: _0 lisTypes

lisTypes --> upperId RestTypes

RestTypes --> \e
RestTypes --> _0 ->_0 upperId RestTypes

---------------
-- Func Body --
---------------

S -> lowerId fun

fun --> _1 lowerId fun
fun --> _0 = out

---------------------------------------
-- from lowest precedence to hightes --
---------------------------------------

out -> p6

p6 --> ADD p6 p7
p6 --> SUB p6 p7
p6 --> p7

p7 --> MUL p7 p10
p7 --> DIV p7 p10
p7 --> p10

-- application

p10 --> lowerId _1 args
p10 --> atom

args --> p10
args --> p10 _1 args
 
atom --> num
atom --> lowerId
atom --> ( p6 )
